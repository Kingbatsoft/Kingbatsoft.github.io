[{"content":"CTFSHOW web 爆破WriteUP WEB21 爆破什么的，都是基操\n打开环境后发现登录，然后随便输入密码用burp抓包\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 GET / HTTP/1.1 Host: f57b8182-620f-42bb-96d2-07460dab13f7.challenge.ctf.show Cache-Control: max-age=0 Authorization: Basic YWRtaW46MTIzNDU= Sec-Ch-Ua: \u0026#34;Chromium\u0026#34;;v=\u0026#34;127\u0026#34;, \u0026#34;Not)A;Brand\u0026#34;;v=\u0026#34;99\u0026#34; Sec-Ch-Ua-Mobile: ?0 Sec-Ch-Ua-Platform: \u0026#34;Windows\u0026#34; Accept-Language: zh-CN Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.6533.100 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7 Sec-Fetch-Site: none Sec-Fetch-Mode: navigate Sec-Fetch-User: ?1 Sec-Fetch-Dest: document Accept-Encoding: gzip, deflate, br Priority: u=0, i Connection: keep-alive 发现Authorization的内容是base编码，使用base64解出admin:12345，正是刚刚输入的内容。\n使用Burp的Intruder功能爆破，插入到Authorization后面\n1 Authorization: Basic §§ payload类型设置简单列表然后导入字典 然后payload处理中设置以下形式\n1 2 Add Prefix: admin: Base64-encode 不过试了几个字典都没爆出来最后没办法了直接看的答案\n账号密码分别为admin:shark63，提交请求直接获取到flag\nWEB22 域名也可以爆破的，试试爆破这个ctf.show的子域名\n这道题因为原来域名失效导致做不了了，直接给出了flag\nWEB23 还爆破？这么多代码，告辞！\n从源码中可以看出请求参数为/?token=***\n可以看出token是匹配特殊的md5格式，使用chatgpt询问并让其编写代码\n1 2 3 4 5 6 7 8 9 10 11 代码解析 include(\u0026#39;flag.php\u0026#39;);：假设 flag.php 文件中包含一个变量 $flag，其内容为我们想要获得的敏感信息。 if(isset($_GET[\u0026#39;token\u0026#39;])){：检查是否通过 GET 方法传递了 token 参数。 $token = md5($_GET[\u0026#39;token\u0026#39;]);：对 token 参数执行 md5 哈希计算，结果保存在 $token 变量中。$token 现在是一个32位的16进制字符串。 条件判断： if(substr($token, 1,1)===substr($token, 14,1) \u0026amp;\u0026amp; substr($token, 14,1) ===substr($token, 17,1))：检查 $token 字符串中第2位、第15位和第18位是否相同。substr 用于截取 $token 中的单个字符，索引从0开始，因此 substr($token, 1,1) 表示获取第二个字符。 if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))：这条语句在继续检查，如果前面的条件通过，那么它进一步验证一个数学关系： 首先，它将第2位、第15位和第18位的字符值相加并除以第2位的字符值，结果与第32位字符值相等。 这里使用 intval 将字符转换为整数值，以便执行数学运算。 echo $flag;：如果上述所有条件都满足，程序输出 $flag，即敏感信息。 highlight_file(__FILE__);：如果没有传递 token 参数，或 token 不满足条件，那么将显示当前文件的源代码。 1 2 3 4 5 6 7 8 如何找到满足条件的 token 为了获得 $flag，我们需要构造一个 token 值，使得它的 md5 哈希结果满足所有条件： 满足字符相等性条件： substr($token, 1,1), substr($token, 14,1), 和 substr($token, 17,1) 的字符必须相等。例如，可以选择一个简单的整数或字符，使得 md5 的第2位、第15位和第18位字符相同。 满足数学条件： 确保 (intval(substr($token, 1,1)) + intval(substr($token, 14,1)) + intval(substr($token, 17,1))) / substr($token, 1,1) === intval(substr($token, 31,1))。 这意味着我们需要调整 token 的值，使得 md5 哈希的第2位和第32位符号满足该数学条件。 可以使用代码或手动尝试生成一个值，使其 md5 哈希符合上述规则。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import hashlib def find_token(): for i in range(100000): # 尝试0到99999的整数作为候选 token token = str(i) # 将候选值转换为字符串 md5_hash = hashlib.md5(token.encode()).hexdigest() # 检查条件：第2位、第15位和第18位字符是否相同 if md5_hash[1] == md5_hash[14] == md5_hash[17]: # 确保第2位和第32位字符都是数字 if md5_hash[1].isdigit() and md5_hash[31].isdigit(): # 检查数学条件 if (int(md5_hash[1]) + int(md5_hash[14]) + int(md5_hash[17])) / int(md5_hash[1]) == int(md5_hash[31]): print(f\u0026#34;Found token: {token}\u0026#34;) print(f\u0026#34;MD5 hash: {md5_hash}\u0026#34;) return token # 返回符合条件的 token print(\u0026#34;No valid token found.\u0026#34;) return None # 执行程序 find_token() 这个代码虽然比较简单，但是对于这道题以及够用了，运行直接输出\n1 2 Found token: 422 MD5 hash: f85454e8279be180185cac7d243c5eb3 直接传参/?token=422获取flag\nWEB24 爆个🔨\n直接看php代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \u0026lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date: 2020-09-03 13:26:39 # @Last Modified by: h1xa # @Last Modified time: 2020-09-03 13:53:31 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ error_reporting(0); include(\u0026#34;flag.php\u0026#34;); if(isset($_GET[\u0026#39;r\u0026#39;])){ $r = $_GET[\u0026#39;r\u0026#39;]; mt_srand(372619038); if(intval($r)===intval(mt_rand())){ echo $flag; } }else{ highlight_file(__FILE__); echo system(\u0026#39;cat /proc/version\u0026#39;); } ?\u0026gt; Linux version 5.4.0-163-generic (buildd@lcy02-amd64-067) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.2)) #180-Ubuntu SMP Tue Sep 5 13:21:23 UTC 2023 Linux version 5.4.0-163-generic (buildd@lcy02-amd64-067) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.2)) #180-Ubuntu SMP Tue Sep 5 13:21:23 UTC 2023 虽然是随机数，但是种子都给我们了还有啥好说的，直接写个文件解出来咯\n1 2 3 4 \u0026lt;?php mt_srand(372619038); echo mt_rand(); ?\u0026gt; 解出1155388967，直接传参?r=1155388967获取到flag\nWEB25 爆个🔨，不爆了\n这道题一看感觉难了不少，虽然还是传参，但是没有前两道可以一眼丁真了\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \u0026lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date: 2020-09-03 13:56:57 # @Last Modified by: h1xa # @Last Modified time: 2020-09-03 15:47:33 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ error_reporting(0); include(\u0026#34;flag.php\u0026#34;); if(isset($_GET[\u0026#39;r\u0026#39;])){ $r = $_GET[\u0026#39;r\u0026#39;]; mt_srand(hexdec(substr(md5($flag), 0,8))); $rand = intval($r)-intval(mt_rand()); if((!$rand)){ if($_COOKIE[\u0026#39;token\u0026#39;]==(mt_rand()+mt_rand())){ echo $flag; } }else{ echo $rand; } }else{ highlight_file(__FILE__); echo system(\u0026#39;cat /proc/version\u0026#39;); } Linux version 5.4.0-163-generic (buildd@lcy02-amd64-067) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.2)) #180-Ubuntu SMP Tue Sep 5 13:21:23 UTC 2023 Linux version 5.4.0-163-generic (buildd@lcy02-amd64-067) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.2)) #180-Ubuntu SMP Tue Sep 5 13:21:23 UTC 2023 随便传俩参发现会返回一个值，询问chatgpt分析后发现这个语句mt_srand(hexdec(substr(md5($flag), 0,8))); 用 $flag 的 MD5 散列值的前8位作为种子，设置了一个特定的随机数种子，然后把传进去的参和这个值做差，直接传个r=0直接就得出了参数?r=1570172612\n然后思路就卡死了\u0026hellip;\u0026hellip;因为并不知道开始的种子，爆破不知道要爆到什么时候\u0026hellip;..看了几个wp和提示，通过这里下载了一个爆破种子的软件，我是在Linux下编译运行的，输入第一个种子，\n1 2 3 4 \u0026lt;?php mt_srand(202568455); //爆破出的种子 echo mt_rand()+mt_rand()+mt_rand()-第一个mt_rand的值; // 由于执行了3次，而期望的值（cookie）只需要第二三个，这里减去第一个值 ?\u0026gt; 这里试了非常！非常！久！复现别人的都成功了（比如提示里那个），但是我这个每个都试了就是不行，我猜测是这个种子无解导致的，这里贴上解出来的内容和种子，希望有大佬可以解答一下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ┌──(root㉿kali)-[/home/kali/桌面/233/php_mt_seed-4.0] └─# \u0026#39;/home/kali/桌面/233/php_mt_seed-4.0/php_mt_seed\u0026#39; 1570172612 Pattern: EXACT Version: 3.0.7 to 5.2.0 Found 0, trying 0xc8000000 - 0xcbffffff, speed 16777.2 Mseeds/s seed = 0xcbd7561a = 3419887130 (PHP 3.0.7 to 5.2.0) seed = 0xcbd7561b = 3419887131 (PHP 3.0.7 to 5.2.0) Found 2, trying 0xfc000000 - 0xffffffff, speed 16911.4 Mseeds/s Version: 5.2.1+ Found 2, trying 0xb2000000 - 0xb3ffffff, speed 167.2 Mseeds/s seed = 0xb38818b6 = 3012040886 (PHP 5.2.1 to 7.0.x; HHVM) Found 3, trying 0xbc000000 - 0xbdffffff, speed 166.4 Mseeds/s seed = 0xbd0e7df0 = 3171843568 (PHP 5.2.1 to 7.0.x; HHVM) Found 4, trying 0xc6000000 - 0xc7ffffff, speed 166.1 Mseeds/s seed = 0xc7d72544 = 3352765764 (PHP 5.2.1 to 7.0.x; HHVM) seed = 0xc7d72544 = 3352765764 (PHP 7.1.0+) Found 6, trying 0xd2000000 - 0xd3ffffff, speed 165.9 Mseeds/s seed = 0xd2005b5c = 3523238748 (PHP 5.2.1 to 7.0.x; HHVM) seed = 0xd2005b5c = 3523238748 (PHP 7.1.0+) Found 8, trying 0xfe000000 - 0xffffffff, speed 165.2 Mseeds/s Found 8 重开环境再次进行测试\n这次输出\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ┌──(root㉿kali)-[/home/kali/桌面/233/php_mt_seed-4.0] └─# \u0026#39;/home/kali/桌面/233/php_mt_seed-4.0/php_mt_seed\u0026#39; 1164719300 Pattern: EXACT Version: 3.0.7 to 5.2.0 Found 0, trying 0x88000000 - 0x8bffffff, speed 17551.5 Mseeds/s seed = 0x8bf3d33e = 2348012350 (PHP 3.0.7 to 5.2.0) seed = 0x8bf3d33f = 2348012351 (PHP 3.0.7 to 5.2.0) Found 2, trying 0xfc000000 - 0xffffffff, speed 17616.1 Mseeds/s Version: 5.2.1+ Found 2, trying 0x32000000 - 0x33ffffff, speed 161.9 Mseeds/s seed = 0x334a2baf = 860498863 (PHP 7.1.0+) Found 3, trying 0x84000000 - 0x85ffffff, speed 163.8 Mseeds/s seed = 0x8540cacf = 2235615951 (PHP 5.2.1 to 7.0.x; HHVM) Found 4, trying 0xa4000000 - 0xa5ffffff, speed 164.3 Mseeds/s seed = 0xa490bd69 = 2760949097 (PHP 7.1.0+) Found 5, trying 0xfe000000 - 0xffffffff, speed 165.2 Mseeds/s Found 5 使用以下代码出解\n1 2 3 4 \u0026lt;?php mt_srand(2760949097); //爆破出的种子 echo mt_rand()+mt_rand()+mt_rand()-1164719300; // 由于执行了3次，而期望的值（cookie）只需要第二三个，这里减去第一个值 ?\u0026gt; 最后get传参?r=1164719300，cookie使用Hackbartoken=1458369882直接execute拿到flagctfshow{87e05252-fe88-4767-85e1-c75fd6eb124b}\n然后不小心把容器销毁了，又要重做了呜呜呜\n不过这道题倒是做出来了\nWEB26 这个可以爆\n这道题开始还以为是爆破，结果研究了半天发现要填入的项太多了不知道怎么做，后来直接填的空参数直接连接成功了，也是非常异或啊，直接用burp重放器发送请求即可看到flag\nWEB27 CTFshow菜鸡学院招生啦！\n看到有录取名单列表，打开发现身份证被去掉了出生日期这一部分，使用下面的脚本便捷地生成生日字典\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 from datetime import datetime, timedelta def generate_birthday_dict(start_date, end_date): \u0026#34;\u0026#34;\u0026#34; 生成指定日期范围内的生日字典。 Args: start_date (str): 开始日期，格式为 \u0026#34;YYYY-MM-DD\u0026#34; end_date (str): 结束日期，格式为 \u0026#34;YYYY-MM-DD\u0026#34; Returns: dict: 生日字典，键为日期，值为空字符串（用于填写名字） \u0026#34;\u0026#34;\u0026#34; date_format = \u0026#34;%Y%m%d\u0026#34; start = datetime.strptime(start_date, date_format) end = datetime.strptime(end_date, date_format) current = start birthday_dict = {} while current \u0026lt;= end: birthday_dict[current.strftime(date_format)] = \u0026#34;\u0026#34; current += timedelta(days=1) return birthday_dict def save_birthday_dict_to_txt(birthday_dict, filename=\u0026#34;birthdays.txt\u0026#34;): \u0026#34;\u0026#34;\u0026#34; 将生日字典保存到 txt 文件中。 Args: birthday_dict (dict): 生日字典，键为日期，值为空字符串 filename (str): 输出文件名 \u0026#34;\u0026#34;\u0026#34; with open(filename, \u0026#34;w\u0026#34;) as file: for date, name in birthday_dict.items(): file.write(f\u0026#34;{date}\\n\u0026#34;) print(f\u0026#34;生日字典已保存到 {filename}\u0026#34;) # 用户输入日期范围 start_date = input(\u0026#34;请输入开始日期 (YYYYMMDD): \u0026#34;) end_date = input(\u0026#34;请输入结束日期 (YYYYMMDD): \u0026#34;) # 生成生日字典并保存 birthday_dict = generate_birthday_dict(start_date, end_date) save_birthday_dict_to_txt(birthday_dict) 生成一个1990-2010生日的字典，然后放到burp的重放器里跑一遍，发现\na=%E5%B5%87%E5%BC%80%E6%A2%A6\u0026amp;p=360730199110167653\n成功得出结果，不过是\\u的字符，找个在线网站解一下就可以了。解出账号和密码直接选择学生登录即可成功。\nWEB28 大海捞针\n这道题打开环境发现/0/1/2.txt，猜测是目录爆破，使用Burp的Intruder功能爆破，看提示后直接用/1-100/1-100扫描就可以了，不需要用别的复杂方法。\n","date":"2024-11-07T00:00:00Z","permalink":"https://blog.kingbatsoft.top/p/ctfshow_web_explosion_write_up/","title":"CTF_show Web 爆破writeup"},{"content":"CTFSHOW web入门 信息收集WriteUP 2 3 3 C T F S H O W\n因为放图后国内网络问题导致加载速度很慢效果不佳所以从这个开始就尽量不放图片了\nWEB1 开发注释未及时删除\n进入环境直接使用F12打开控制台即可找出flag\n\u0026lt;!-- ctfshow{4fd63d59-4831-49ff-9bd6-4ee34b8e70c4} --\u0026gt;\nWEB2 js前台拦截 === 无效操作\n这道题进去以后发现F12按了没反应，右键也不行，但是可以直接通过浏览器界面打开开发者模式或者通过查看源代码绕过，flag就在注释里\n\u0026lt;!-- ctfshow{5f025258-4778-4833-95ff-1941f3ae0f6e} --\u0026gt;\nWEB3 没思路的时候抓个包看看，可能会有意外收获\n根据提示从请求头直接抓取到flag\nFlag: ctfshow{c9e9eea4-5293-47d2-8f13-219856f7d61e}\nWEB4 总有人把后台地址写入robots，帮黑阔大佬们引路。\n这道题根据提示直接访问robots.txt，获取到flag文件地址，访问即可得到flag\nWEB5 phps源码泄露有时候能帮上忙\n这道题一开始没有思路，但是看到phps文件尝试访问index.phps下载到主页的源码后直接在注释里得到flag\n//ctfshow{2b127e88-8378-410e-abe0-1f215357d8ac}\nWEB6 解压源码到当前目录，测试正常，收工\n这道题是站长太粗心直接把网站源码遗留在生产环境中，扫描目录发现www.zip，下载即可直接获得flag\nWEB7 版本控制很重要，但不要部署到生产环境更重要。\n这道题根据提示可以猜到是版本文件泄露，尝试访问/.git直接获取flag\nWEB8 版本控制很重要，但不要部署到生产环境更重要。\n嗯？难道我看错题了？不过测试发现.git这次不行了，经过搜索发现.svn也是常用的开发版本文件，尝试访问发现直接获取flag\n1 2 3 NOTE 常见文件泄露目录格式 .git .svn .DS_store .hg /CVS/* .bzr .filename.swp phpinfo.php WEB9 发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了\n这题似乎也没啥思路，不过上一题查过vim的缓存文件 .filename.swp 尝试访问index.php.swp直接获取到了flag\nWEB10 cookie 只是一块饼干，不能存放任何隐私数据\n根据提示直接抓包获取cookie内存储的的flag\nWEB11 域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息\n用好几个网站查询都不行，不知道是什么问题，可能域名有问题，访问不了了，不过大概是考nslookup这种域名解析的知识\nWEB12 有时候网站上的公开信息，就是管理员常用密码\n网站底下的帮助热线就是密码，直接使用admin账号即可登录\nWEB13 技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码\n在网站顶部看到document，点进去后看到默认密码，尝试登录直接成功\nWEB14 有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人\n这道题一开始也没思路，点提示后才发现/editor是个能访问的插入编辑器，选择上传文件发现有个文件浏览，一看直接连传马都不需要了，直接找到flag所在文件打开即可\nWEB15 公开的信息比如邮箱，可能造成信息泄露，产生严重后果\n根据提示找到一个QQ邮箱，尝试/admin发现后台管理界面，尝试邮箱失败，不过发现有重置密码界面，点进去发现是我所在的城市？根据QQ邮箱的QQ直接搜到这个人是在西安，尝试后直接改掉了密码进入后台\nWEB16 对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露\n直接访问tz.php找phpinfo信息，然后直接搜索到作为flag的环境变量\nWEB17 备份的sql文件会泄露敏感信息\n直接下载backup.sql获得flag\nWEB18 不要着急，休息，休息一会儿，玩101分给你flag\n这道题是个很难的Flappy bird，玩了一会发现根本不可能过，所以F12找到js文件的通过条件的js\n1 var result=window.confirm(\u0026#34;\\u4f60\\u8d62\\u4e86\\uff0c\\u53bb\\u5e7a\\u5e7a\\u96f6\\u70b9\\u76ae\\u7231\\u5403\\u76ae\\u770b\\u770b\u0026#34;); 直接复制到控制台，弹出提示：你赢了，去幺幺零点皮爱吃皮看看\n根据谐音访问110.php直接获取flag\nWEB19 密钥什么的，就不要放在前端了\n这道题密钥前端验证，可以直接从前端找到判断的js代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 function checkForm(){ var key = \u0026#34;0000000372619038\u0026#34;; var iv = \u0026#34;ilove36dverymuch\u0026#34;; var pazzword = $(\u0026#34;#pazzword\u0026#34;).val(); pazzword = encrypt(pazzword,key,iv); $(\u0026#34;#pazzword\u0026#34;).val(pazzword); $(\u0026#34;#loginForm\u0026#34;).submit(); } function encrypt(data,key,iv) { //key,iv：16位的字符串 var key1 = CryptoJS.enc.Latin1.parse(key); var iv1 = CryptoJS.enc.Latin1.parse(iv); return CryptoJS.AES.encrypt(data, key1,{ iv : iv1, mode : CryptoJS.mode.CBC, padding : CryptoJS.pad.ZeroPadding }).toString(); } 还给了验证的密钥\n1 2 3 4 5 6 7 8 9 10 error_reporting(0); $flag=\u0026#34;fakeflag\u0026#34; $u = $_POST[\u0026#39;username\u0026#39;]; $p = $_POST[\u0026#39;pazzword\u0026#39;]; if(isset($u) \u0026amp;\u0026amp; isset($p)){ if($u===\u0026#39;admin\u0026#39; \u0026amp;\u0026amp; $p ===\u0026#39;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04\u0026#39;){ echo $flag; } } 根据收集到的信息搜索AES加密，使用这个网站，从上面前端的JS中找到相关方法：CBC ZeroPadding，再根据密文解密出密码：i_want_a_36d_girl\n直接提交账号和密码admin i_want_a_36d_girl获取flag\nWEB20 mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。\n根据提示搜索相关信息，可以搜到/db/db.mdb，尝试下载后使用access打开，虽然报了一堆错，但是最后还是找到了flag\nflag{ctfshow_old_database}\n","date":"2024-11-06T00:00:00Z","permalink":"https://blog.kingbatsoft.top/p/ctfshow_web_informationcollect_write_up/","title":"CTF_show Web入门 信息收集writeup"},{"content":"新人第一次比赛的writeup，可能写的有很啰嗦的地方，请高手们见谅呀QAQ\n因为直接上传太大了，访问效果不佳，所以这里直接提供原始文档\nBuildCTF官方图片 点击此处查看\n","date":"2024-10-31T00:00:00Z","permalink":"https://blog.kingbatsoft.top/p/build_ctf_write_up/","title":"从BuildCTF开始——CTF的旅程"},{"content":" 随着前两个博客分别因为 没续费和rm -rf 相继暴毙以后，第三个又双叒叕来啦！！\n嗯 有点不吉利\n","date":"2024-10-31T00:00:00Z","permalink":"https://blog.kingbatsoft.top/p/new_start_first_blog/","title":"第一篇博客"}]